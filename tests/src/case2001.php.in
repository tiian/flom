<?php
/*
 * Copyright (c) 2013-2021, Christian Ferrari <tiian@users.sourceforge.net>
 * All rights reserved.
 *
 * This file is part of FLoM.
 *
 * FLoM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 * FLoM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with FLoM.  If not, see <http://www.gnu.org/licenses/>.
 */

include("@abs_top_builddir@/src/php/flom.php");



/*
 * Happy path usage with a static handle
 */
function happy_path() {
	 /* handle allocation */
	 $handle = new flom_handle_t();
	 $ret_cod = FLOM_RC_OK;
	 /* handle initialization */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_init($handle))) {
	 	fwrite(STDERR, "happy_path/flom_handle_init() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* lock acquisition */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_lock($handle))) {
	    	fwrite(STDERR, "happy_path/flom_handle_lock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
	 	exit(1);
	 }
	 /* lock release */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_unlock($handle))) {
	    	fwrite(STDERR, "happy_path/flom_handle_unlock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle clean-up (memory release) */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_clean($handle))) {
	   	fwrite(STDERR, "happy_path/flom_handle_clean() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle deallocation */
	 $handle = NULL;
}



/*
 * Missing flom_handle_init method
 */
function missing_init() {
	 /* handle allocation */
	 $handle = new flom_handle_t();
	 $ret_cod = FLOM_RC_OK;
	 /* lock acquisition */
	 if (FLOM_RC_API_INVALID_SEQUENCE != (
	    $ret_cod = flom_handle_lock($handle))) {
	    	fwrite(STDERR, "missing_init/flom_handle_lock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
	 	exit(1);
	 }
	 /* lock release */
	 if (FLOM_RC_API_INVALID_SEQUENCE != (
	    $ret_cod = flom_handle_unlock($handle))) {
	    	fwrite(STDERR, "missing_init/flom_handle_unlock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle clean-up (memory release) */
	 if (FLOM_RC_API_INVALID_SEQUENCE != (
	    $ret_cod = flom_handle_clean($handle))) {
	   	fwrite(STDERR, "missing_init/flom_handle_clean() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle deallocation */
	 $handle = NULL;
}



/*
 * Missing flom_handle_lock method
 */
function missing_lock() {
	 /* handle allocation */
	 $handle = new flom_handle_t();
	 $ret_cod = FLOM_RC_OK;

	 /* handle initialization */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_init($handle))) {
	 	fwrite(STDERR, "missing_lock/flom_handle_init() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* lock release */
	 if (FLOM_RC_API_INVALID_SEQUENCE != (
	    $ret_cod = flom_handle_unlock($handle))) {
	    	fwrite(STDERR, "missing_lock/flom_handle_unlock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle clean-up (memory release) */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_clean($handle))) {
	   	fwrite(STDERR, "missing_lock/flom_handle_clean() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle deallocation */
	 $handle = NULL;
}



/*
 * Missing flom_handle_unlock method
 */
function missing_unlock() {
	 /* handle allocation */
	 $handle = new flom_handle_t();
	 $ret_cod = FLOM_RC_OK;

	 /* handle initialization */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_init($handle))) {
	 	fwrite(STDERR, "missing_unlock/flom_handle_init() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* lock acquisition */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_lock($handle))) {
	    	fwrite(STDERR, "missing_unlock/flom_handle_lock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
	 	exit(1);
	 }
	 /* handle clean-up (memory release) */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_clean($handle))) {
	   	fwrite(STDERR, "missing_unlock/flom_handle_clean() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle deallocation */
	 $handle = NULL;
}



happy_path();
missing_init();
missing_lock();
missing_unlock();
?>
