<?php
/*
 * Copyright (c) 2013-2024, Christian Ferrari <tiian@users.sourceforge.net>
 * All rights reserved.
 *
 * This file is part of FLoM.
 *
 * FLoM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 * FLoM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with FLoM.  If not, see <http://www.gnu.org/licenses/>.
 */

/* include FLoM header only if SWIG < 4.1.0 */
@PHP_HEADER_TEST@



/* step 1: handle allocation */
$handle = new flom_handle_t();
$ret_cod = FLOM_RC_OK;

/* step 2: handle initialization */
if (FLOM_RC_OK != ($ret_cod = flom_handle_init($handle))) {
	fwrite(STDERR, "flom_handle_init() returned " . $ret_cod . " '" . 
		flom_strerror($ret_cod) . "'\n");
	exit(1);
}

/* step 3: lock acquisition */
if (FLOM_RC_OK != ($ret_cod = flom_handle_lock($handle))) {
	fwrite(STDERR, "flom_handle_lock() returned " . $ret_cod . " '" . 
		flom_strerror($ret_cod) . "'\n");
	exit(1);
}

/* step 4: execute the code that needs lock protection */

/* step 5: lock release */
if (FLOM_RC_OK != ($ret_cod = flom_handle_unlock($handle))) {
	fwrite(STDERR, "flom_handle_unlock() returned " . $ret_cod . " '" . 
		flom_strerror($ret_cod) . "'\n");
	exit(1);
}

/* step 6: handle clean-up (memory release) */
if (FLOM_RC_OK != ($ret_cod = flom_handle_clean($handle))) {
	fwrite(STDERR, "flom_handle_clean() returned " . $ret_cod . " '" . 
		flom_strerror($ret_cod) . "'\n");
	exit(1);
}

/* step 7: handle deallocation */
$handle = NULL;

?>
